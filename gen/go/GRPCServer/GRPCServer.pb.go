// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        (unknown)
// source: protos/GRPCServer.proto

package GPRCServer

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// request message
type FirstRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *FirstRequest) Reset() {
	*x = FirstRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_GRPCServer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstRequest) ProtoMessage() {}

func (x *FirstRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_GRPCServer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstRequest.ProtoReflect.Descriptor instead.
func (*FirstRequest) Descriptor() ([]byte, []int) {
	return file_protos_GRPCServer_proto_rawDescGZIP(), []int{0}
}

func (x *FirstRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// response message
type FirstResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *FirstResponse) Reset() {
	*x = FirstResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_GRPCServer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstResponse) ProtoMessage() {}

func (x *FirstResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_GRPCServer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstResponse.ProtoReflect.Descriptor instead.
func (*FirstResponse) Descriptor() ([]byte, []int) {
	return file_protos_GRPCServer_proto_rawDescGZIP(), []int{1}
}

func (x *FirstResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// request message
type LastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *LastRequest) Reset() {
	*x = LastRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_GRPCServer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LastRequest) ProtoMessage() {}

func (x *LastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_GRPCServer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LastRequest.ProtoReflect.Descriptor instead.
func (*LastRequest) Descriptor() ([]byte, []int) {
	return file_protos_GRPCServer_proto_rawDescGZIP(), []int{2}
}

func (x *LastRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// response message
type LastResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *LastResponse) Reset() {
	*x = LastResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_GRPCServer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LastResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LastResponse) ProtoMessage() {}

func (x *LastResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_GRPCServer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LastResponse.ProtoReflect.Descriptor instead.
func (*LastResponse) Descriptor() ([]byte, []int) {
	return file_protos_GRPCServer_proto_rawDescGZIP(), []int{3}
}

func (x *LastResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_protos_GRPCServer_proto protoreflect.FileDescriptor

var file_protos_GRPCServer_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x47, 0x52, 0x50, 0x43, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x47, 0x50, 0x52, 0x43, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x21, 0x0a, 0x0d, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x21, 0x0a, 0x0b,
	0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x20, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x32, 0x95, 0x01, 0x0a, 0x0a, 0x47, 0x50, 0x52, 0x43, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x42, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x47, 0x52, 0x50, 0x43, 0x12,
	0x18, 0x2e, 0x47, 0x50, 0x52, 0x43, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x47, 0x50, 0x52, 0x43,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x47, 0x52, 0x50, 0x43, 0x12, 0x17, 0x2e, 0x47, 0x50, 0x52, 0x43, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x47, 0x50, 0x52, 0x43, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x6c, 0x61, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_protos_GRPCServer_proto_rawDescOnce sync.Once
	file_protos_GRPCServer_proto_rawDescData = file_protos_GRPCServer_proto_rawDesc
)

func file_protos_GRPCServer_proto_rawDescGZIP() []byte {
	file_protos_GRPCServer_proto_rawDescOnce.Do(func() {
		file_protos_GRPCServer_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_GRPCServer_proto_rawDescData)
	})
	return file_protos_GRPCServer_proto_rawDescData
}

var file_protos_GRPCServer_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_protos_GRPCServer_proto_goTypes = []interface{}{
	(*FirstRequest)(nil),  // 0: GPRCServer.firstRequest
	(*FirstResponse)(nil), // 1: GPRCServer.firstResponse
	(*LastRequest)(nil),   // 2: GPRCServer.lastRequest
	(*LastResponse)(nil),  // 3: GPRCServer.lastResponse
}
var file_protos_GRPCServer_proto_depIdxs = []int32{
	0, // 0: GPRCServer.GPRCServer.connectGRPC:input_type -> GPRCServer.firstRequest
	2, // 1: GPRCServer.GPRCServer.disconnectGRPC:input_type -> GPRCServer.lastRequest
	1, // 2: GPRCServer.GPRCServer.connectGRPC:output_type -> GPRCServer.firstResponse
	3, // 3: GPRCServer.GPRCServer.disconnectGRPC:output_type -> GPRCServer.lastResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protos_GRPCServer_proto_init() }
func file_protos_GRPCServer_proto_init() {
	if File_protos_GRPCServer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_GRPCServer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_GRPCServer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_GRPCServer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LastRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_GRPCServer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LastResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_GRPCServer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_GRPCServer_proto_goTypes,
		DependencyIndexes: file_protos_GRPCServer_proto_depIdxs,
		MessageInfos:      file_protos_GRPCServer_proto_msgTypes,
	}.Build()
	File_protos_GRPCServer_proto = out.File
	file_protos_GRPCServer_proto_rawDesc = nil
	file_protos_GRPCServer_proto_goTypes = nil
	file_protos_GRPCServer_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GPRCServerClient is the client API for GPRCServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GPRCServerClient interface {
	ConnectGRPC(ctx context.Context, in *FirstRequest, opts ...grpc.CallOption) (*FirstResponse, error)
	DisconnectGRPC(ctx context.Context, in *LastRequest, opts ...grpc.CallOption) (*LastResponse, error)
}

type gPRCServerClient struct {
	cc grpc.ClientConnInterface
}

func NewGPRCServerClient(cc grpc.ClientConnInterface) GPRCServerClient {
	return &gPRCServerClient{cc}
}

func (c *gPRCServerClient) ConnectGRPC(ctx context.Context, in *FirstRequest, opts ...grpc.CallOption) (*FirstResponse, error) {
	out := new(FirstResponse)
	err := c.cc.Invoke(ctx, "/GPRCServer.GPRCServer/connectGRPC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gPRCServerClient) DisconnectGRPC(ctx context.Context, in *LastRequest, opts ...grpc.CallOption) (*LastResponse, error) {
	out := new(LastResponse)
	err := c.cc.Invoke(ctx, "/GPRCServer.GPRCServer/disconnectGRPC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GPRCServerServer is the server API for GPRCServer service.
type GPRCServerServer interface {
	ConnectGRPC(context.Context, *FirstRequest) (*FirstResponse, error)
	DisconnectGRPC(context.Context, *LastRequest) (*LastResponse, error)
}

// UnimplementedGPRCServerServer can be embedded to have forward compatible implementations.
type UnimplementedGPRCServerServer struct {
}

func (*UnimplementedGPRCServerServer) ConnectGRPC(context.Context, *FirstRequest) (*FirstResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConnectGRPC not implemented")
}
func (*UnimplementedGPRCServerServer) DisconnectGRPC(context.Context, *LastRequest) (*LastResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisconnectGRPC not implemented")
}

func RegisterGPRCServerServer(s *grpc.Server, srv GPRCServerServer) {
	s.RegisterService(&_GPRCServer_serviceDesc, srv)
}

func _GPRCServer_ConnectGRPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FirstRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GPRCServerServer).ConnectGRPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GPRCServer.GPRCServer/ConnectGRPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GPRCServerServer).ConnectGRPC(ctx, req.(*FirstRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GPRCServer_DisconnectGRPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LastRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GPRCServerServer).DisconnectGRPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GPRCServer.GPRCServer/DisconnectGRPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GPRCServerServer).DisconnectGRPC(ctx, req.(*LastRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GPRCServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GPRCServer.GPRCServer",
	HandlerType: (*GPRCServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "connectGRPC",
			Handler:    _GPRCServer_ConnectGRPC_Handler,
		},
		{
			MethodName: "disconnectGRPC",
			Handler:    _GPRCServer_DisconnectGRPC_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/GRPCServer.proto",
}
